// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @db.UnsignedInt @default(autoincrement())
  username String @db.VarChar(512)
  email String @db.VarChar(512) @unique
  password String @db.VarChar(512)
  refreshToken RefreshToken[]
  movie Movie[]
  createdAt DateTime @db.Timestamp(0) @default(now()) @map("created_at")
  updatedAt DateTime @db.Timestamp(0) @updatedAt @map("updated_at")

  @@map("users")
}

model RefreshToken {
  id Int @id @db.UnsignedInt @default(autoincrement())
  token String @db.VarChar(1024)
  tokenIdentifier String @db.VarChar(100) @map("token_identifier")
  userId Int @db.UnsignedInt @map("user_id")
  user User @relation(fields: [userId],references: [id])
  createdAt DateTime @db.Timestamp(0) @default(now()) @map("created_at")
  updatedAt DateTime @db.Timestamp(0) @updatedAt @map("updated_at")

  @@unique([userId,tokenIdentifier])
  @@map("refresh_tokens")
}

model Movie {
  id Int @id @db.UnsignedInt @default(autoincrement())
  title String @db.VarChar(255)
  director String @db.VarChar(255)
  releaseYear Int @db.Year() @map("release_year")
  userId Int @db.UnsignedInt @map("user_id")
  user User @relation(fields: [userId],references: [id])
  createdAt DateTime @db.Timestamp(0) @default(now()) @map("created_at")
  updatedAt DateTime @db.Timestamp(0) @updatedAt @map("updated_at")

  @@map("movies")
}
